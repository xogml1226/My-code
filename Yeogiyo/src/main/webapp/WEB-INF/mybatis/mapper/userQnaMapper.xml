<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.qna">

<select id="qnaSeq" resultType="Integer">
	SELECT qna_seq.NEXTVAL FROM dual
</select>

<insert id="insertQna" parameterType="com.sp.user.qna.Qna">
	INSERT INTO qna(qnaNum, userId, qnaTitle, qnaContent, qnaGroupNum, qnaDepth, qnaOrderNo, qnaParent)
	VALUES(#{qnaNum}, #{userId}, #{qnaTitle}, #{qnaContent}, #{qnaGroupNum}, #{qnaDepth}, #{qnaOrderNo}, #{qnaParent})
</insert>

<sql id="where-list">
	<if test="condition=='all'">
		(INSTR(qnaTitle, #{keyword}) &gt; 0
			OR DBMS_LOB.INSTR(qnaContent, #{keyword}) &gt; 0)
	</if>
	<if test="condition=='subject'">
		INSTR(qnaTitle, #{keyword}) &gt; 0
	</if>
	<if test="condition=='content'">
		DBMS_LOB.INSTR(qnaContent, #{keyword}) &gt; 0
	</if>
	<if test="condition=='userId'">
		userId=#{keyword}
	</if>
	<if test="condition=='created'">
		(TO_CHAR(qnaCreated, 'YYYY-MM-DD') = #{keyword}
			OR TO_CHAR(qnaCreated, 'YYYYMMDD') = #{keyword})
	</if>
</sql>

<select id="dataCount" resultType="Integer" parameterType="map">
	SELECT NVL(COUNT(*), 0)
	FROM qna
	<where>
		<if test="keyword!=null and keyword!=''">
			<include refid="where-list"/>
		</if>
	</where>
</select>

<select id="listQna" resultType="com.sp.user.qna.Qna" parameterType="map">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
			SELECT qnaNum, userId, qnaTitle, qnaCreated, qnaGroupNum, qnaOrderNo, qnaDepth
			FROM qna
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
			</where>
			ORDER BY qnaGroupNum DESC, qnaOrderNo ASC
<![CDATA[
		) tb WHERE ROWNUM <= #{end}
	) WHERE rnum >= #{start}	
]]>
</select>

<select id="readQna" resultType="com.sp.user.qna.Qna" parameterType="Integer">
	SELECT qnaNum, userId, qnaTitle, qnaContent, qnaCreated, qnaGroupNum, qnaOrderNo, qnaDepth, qnaParent
	FROM qna
	WHERE qnaNum=#{qnaNum}
</select>

<select id="preReadQna" resultType="com.sp.user.qna.Qna" parameterType="map">
	SELECT * FROM (
		SELECT qnaNum, qnaTitle FROM qna
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		AND	((qnaGroupNum = #{qnaGroupNum} AND qnaOrderNo &gt; #{qnaOrderNo})
		OR (qnaGroupNum &lt; #{qnaGroupNum}))
		</where>
		ORDER BY qnaGroupNum DESC, qnaOrderNo ASC
	) WHERE ROWNUM=1	
</select>

<select id="nextReadQna" resultType="com.sp.user.qna.Qna" parameterType="map">
	SELECT * FROM (
		SELECT qnaNum, qnaTitle FROM qna
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		AND	((qnaGroupNum = #{qnaGroupNum} AND qnaOrderNo &lt; #{qnaOrderNo})
		OR (qnaGroupNum &gt; #{qnaGroupNum}))
		</where>
		ORDER BY qnaGroupNum ASC, qnaOrderNo DESC
	) WHERE ROWNUM=1	
</select>

<update id="updateQnaOrderNo" parameterType="map">
	UPDATE qna SET qnaOrderNo=qnaOrderNo+1
	WHERE qnaGroupNum=#{qnaGroupNum} AND qnaOrderNo &gt; #{qnaOrderNo}
</update>

<update id="updateQna" parameterType="com.sp.user.qna.Qna">
	UPDATE qna SET qnaTitle=#{qnaTitle}, qnaContent=#{qnaContent}
	WHERE qnaNum=#{qnaNum} AND userId=#{userId}
</update>

<delete id="deleteQna" parameterType="Integer">
	DELETE FROM qna WHERE qnaNum IN
		(SELECT qnaNum FROM qna START WITH qnaNum=#{qnaNum}
			CONNECT BY PRIOR qnaNum=qnaParent)
</delete>
<select id="listArticleQna" parameterType="Integer" resultType="com.sp.user.qna.Qna">
	SELECT ROWNUM listNum, tb.* FROM (
		SELECT qnaNum, userId, qnaTitle, TO_CHAR(qnaCreated, 'YYYY-MM-DD') qnaCreated,
		qnaGroupNum, qnaOrderNo, qnaDepth
		FROM qna
		WHERE qnaGroupNum=#{qnaGroupNum}
		ORDER BY qnaOrderNo ASC
	) tb	
</select>
</mapper>